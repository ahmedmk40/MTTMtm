version: '3.8'

services:
  web:
    build:
      context: ..
      dockerfile: docker/Dockerfile
    restart: always
    depends_on:
      - db
      - redis
    environment:
      - DJANGO_SETTINGS_MODULE=config.settings.production
      - DB_NAME=transaction_monitoring
      - DB_USER=postgres
      - DB_PASSWORD=postgres
      - DB_HOST=db
      - DB_PORT=5432
      - REDIS_URL=redis://redis:6379/0
    volumes:
      - static_volume:/app/staticfiles
      - media_volume:/app/media
    networks:
      - app_network

  db:
    image: postgres:14
    restart: always
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    environment:
      - POSTGRES_DB=transaction_monitoring
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    networks:
      - app_network

  redis:
    image: redis:7
    restart: always
    volumes:
      - redis_data:/data
    networks:
      - app_network

  celery:
    build:
      context: ..
      dockerfile: docker/Dockerfile
    restart: always
    command: celery -A transaction_monitoring worker -l info
    depends_on:
      - db
      - redis
    environment:
      - DJANGO_SETTINGS_MODULE=config.settings.production
      - DB_NAME=transaction_monitoring
      - DB_USER=postgres
      - DB_PASSWORD=postgres
      - DB_HOST=db
      - DB_PORT=5432
      - REDIS_URL=redis://redis:6379/0
    networks:
      - app_network

  nginx:
    image: nginx:1.23
    restart: always
    ports:
      - "80:80"
    volumes:
      - static_volume:/app/staticfiles
      - media_volume:/app/media
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - web
    networks:
      - app_network

networks:
  app_network:

volumes:
  postgres_data:
  redis_data:
  static_volume:
  media_volume: