version: '3.8'

services:
  # PostgreSQL database
  db:
    image: postgres:16-alpine
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    environment:
      - POSTGRES_DB=${DB_NAME:-transaction_monitoring}
      - POSTGRES_USER=${DB_USER:-postgres}
      - POSTGRES_PASSWORD=${DB_PASSWORD:-postgres}
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
    restart: always

  # Redis for caching and Celery
  redis:
    image: redis:7-alpine
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 5s
      retries: 5
    restart: always

  # Web application
  web:
    build: .
    volumes:
      - static_files:/app/staticfiles
      - media_files:/app/media
      - logs:/var/log/transaction_monitoring
    depends_on:
      - db
      - redis
    environment:
      - SECRET_KEY=${SECRET_KEY:-change_me_in_production}
      - DB_NAME=${DB_NAME:-transaction_monitoring}
      - DB_USER=${DB_USER:-postgres}
      - DB_PASSWORD=${DB_PASSWORD:-postgres}
      - DB_HOST=db
      - DB_PORT=5432
      - REDIS_URL=redis://redis:6379/0
      - DJANGO_SUPERUSER_USERNAME=${DJANGO_SUPERUSER_USERNAME:-admin}
      - DJANGO_SUPERUSER_PASSWORD=${DJANGO_SUPERUSER_PASSWORD:-admin}
      - DJANGO_SUPERUSER_EMAIL=${DJANGO_SUPERUSER_EMAIL:-admin@example.com}
      - INITIALIZE_RULES=${INITIALIZE_RULES:-true}
      - INITIALIZE_ML_MODELS=${INITIALIZE_ML_MODELS:-true}
      - GUNICORN_WORKERS=${GUNICORN_WORKERS:-4}
      - GUNICORN_WORKER_CLASS=${GUNICORN_WORKER_CLASS:-sync}
      - GUNICORN_TIMEOUT=${GUNICORN_TIMEOUT:-120}
      - ALLOWED_HOSTS=${ALLOWED_HOSTS:-localhost,127.0.0.1}
    restart: always

  # Celery worker
  celery:
    build: .
    command: celery -A config worker -l info
    volumes:
      - logs:/var/log/transaction_monitoring
    depends_on:
      - db
      - redis
      - web
    environment:
      - SECRET_KEY=${SECRET_KEY:-change_me_in_production}
      - DB_NAME=${DB_NAME:-transaction_monitoring}
      - DB_USER=${DB_USER:-postgres}
      - DB_PASSWORD=${DB_PASSWORD:-postgres}
      - DB_HOST=db
      - DB_PORT=5432
      - REDIS_URL=redis://redis:6379/0
    restart: always

  # Celery beat for scheduled tasks
  celery-beat:
    build: .
    command: celery -A config beat -l info
    volumes:
      - logs:/var/log/transaction_monitoring
    depends_on:
      - db
      - redis
      - web
    environment:
      - SECRET_KEY=${SECRET_KEY:-change_me_in_production}
      - DB_NAME=${DB_NAME:-transaction_monitoring}
      - DB_USER=${DB_USER:-postgres}
      - DB_PASSWORD=${DB_PASSWORD:-postgres}
      - DB_HOST=db
      - DB_PORT=5432
      - REDIS_URL=redis://redis:6379/0
    restart: always

  # Nginx for serving static files and as a reverse proxy
  nginx:
    image: nginx:1.25-alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/conf.d:/etc/nginx/conf.d
      - ./nginx/ssl:/etc/nginx/ssl
      - static_files:/var/www/html/static
      - media_files:/var/www/html/media
    depends_on:
      - web
    restart: always

volumes:
  postgres_data:
  redis_data:
  static_files:
  media_files:
  logs: