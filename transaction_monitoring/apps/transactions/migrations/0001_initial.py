# Generated by Django 5.1.7 on 2025-03-17 11:14

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Transaction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated at')),
                ('transaction_id', models.CharField(max_length=100, unique=True, verbose_name='Transaction ID')),
                ('amount', models.DecimalField(decimal_places=2, max_digits=15, verbose_name='Amount')),
                ('currency', models.CharField(max_length=3, verbose_name='Currency')),
                ('user_id', models.CharField(max_length=100, verbose_name='User ID')),
                ('timestamp', models.DateTimeField(verbose_name='Transaction Timestamp')),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('approved', 'Approved'), ('rejected', 'Rejected'), ('flagged', 'Flagged for Review')], default='pending', max_length=20, verbose_name='Status')),
                ('risk_score', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True, verbose_name='Risk Score')),
                ('transaction_type', models.CharField(choices=[('acquiring', 'Acquiring'), ('wallet', 'Wallet')], max_length=20, verbose_name='Transaction Type')),
                ('channel', models.CharField(choices=[('pos', 'POS'), ('ecommerce', 'E-commerce'), ('wallet', 'Wallet')], max_length=20, verbose_name='Channel')),
                ('device_id', models.CharField(blank=True, max_length=100, null=True, verbose_name='Device ID')),
                ('merchant_id', models.CharField(blank=True, max_length=100, null=True, verbose_name='Merchant ID')),
                ('location_data', models.JSONField(default=dict, verbose_name='Location Data')),
                ('payment_method_data', models.JSONField(default=dict, verbose_name='Payment Method Data')),
                ('metadata', models.JSONField(default=dict, verbose_name='Metadata')),
                ('is_flagged', models.BooleanField(default=False, verbose_name='Is Flagged')),
                ('flag_reason', models.CharField(blank=True, max_length=255, null=True, verbose_name='Flag Reason')),
                ('review_status', models.CharField(blank=True, choices=[('pending', 'Pending Review'), ('reviewed', 'Reviewed'), ('cleared', 'Cleared'), ('confirmed_fraud', 'Confirmed Fraud')], max_length=20, null=True, verbose_name='Review Status')),
                ('reviewed_by', models.CharField(blank=True, max_length=100, null=True, verbose_name='Reviewed By')),
                ('reviewed_at', models.DateTimeField(blank=True, null=True, verbose_name='Reviewed At')),
            ],
            options={
                'verbose_name': 'Transaction',
                'verbose_name_plural': 'Transactions',
            },
        ),
        migrations.CreateModel(
            name='EcommerceTransaction',
            fields=[
                ('transaction_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='transactions.transaction')),
                ('website_url', models.URLField(blank=True, null=True, verbose_name='Website URL')),
                ('is_3ds_verified', models.BooleanField(default=False, verbose_name='3DS Verified')),
                ('device_fingerprint', models.CharField(blank=True, max_length=255, null=True, verbose_name='Device Fingerprint')),
                ('shipping_address', models.JSONField(default=dict, verbose_name='Shipping Address')),
                ('billing_address', models.JSONField(default=dict, verbose_name='Billing Address')),
                ('is_billing_shipping_match', models.BooleanField(default=True, verbose_name='Billing/Shipping Match')),
                ('mcc', models.CharField(blank=True, max_length=10, null=True, verbose_name='MCC')),
                ('authorization_code', models.CharField(blank=True, max_length=50, null=True, verbose_name='Authorization Code')),
                ('recurring_payment', models.BooleanField(default=False, verbose_name='Recurring Payment')),
                ('response_code', models.CharField(blank=True, max_length=20, null=True, verbose_name='Response Code')),
                ('processor_response_code', models.CharField(blank=True, max_length=20, null=True, verbose_name='Processor Response Code')),
                ('avs_result', models.CharField(blank=True, max_length=10, null=True, verbose_name='AVS Result')),
                ('cvv_result', models.CharField(blank=True, max_length=10, null=True, verbose_name='CVV Result')),
                ('response_time', models.FloatField(blank=True, null=True, verbose_name='Response Time (ms)')),
            ],
            options={
                'verbose_name': 'E-commerce Transaction',
                'verbose_name_plural': 'E-commerce Transactions',
            },
            bases=('transactions.transaction',),
        ),
        migrations.CreateModel(
            name='POSTransaction',
            fields=[
                ('transaction_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='transactions.transaction')),
                ('terminal_id', models.CharField(max_length=100, verbose_name='Terminal ID')),
                ('entry_mode', models.CharField(choices=[('chip', 'Chip'), ('swipe', 'Swipe'), ('contactless', 'Contactless'), ('manual', 'Manual Entry')], max_length=20, verbose_name='Entry Mode')),
                ('terminal_type', models.CharField(max_length=50, verbose_name='Terminal Type')),
                ('attendance', models.CharField(choices=[('attended', 'Attended'), ('unattended', 'Unattended')], max_length=20, verbose_name='Attendance')),
                ('condition', models.CharField(choices=[('card_present', 'Card Present'), ('card_not_present', 'Card Not Present')], max_length=20, verbose_name='Condition')),
                ('mcc', models.CharField(blank=True, max_length=10, null=True, verbose_name='MCC')),
                ('authorization_code', models.CharField(blank=True, max_length=50, null=True, verbose_name='Authorization Code')),
                ('recurring_payment', models.BooleanField(default=False, verbose_name='Recurring Payment')),
                ('response_code', models.CharField(blank=True, max_length=20, null=True, verbose_name='Response Code')),
                ('processor_response_code', models.CharField(blank=True, max_length=20, null=True, verbose_name='Processor Response Code')),
                ('avs_result', models.CharField(blank=True, max_length=10, null=True, verbose_name='AVS Result')),
                ('cvv_result', models.CharField(blank=True, max_length=10, null=True, verbose_name='CVV Result')),
                ('response_time', models.FloatField(blank=True, null=True, verbose_name='Response Time (ms)')),
            ],
            options={
                'verbose_name': 'POS Transaction',
                'verbose_name_plural': 'POS Transactions',
            },
            bases=('transactions.transaction',),
        ),
        migrations.CreateModel(
            name='WalletTransaction',
            fields=[
                ('transaction_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='transactions.transaction')),
                ('wallet_id', models.CharField(max_length=100, verbose_name='Wallet ID')),
                ('source_type', models.CharField(choices=[('wallet', 'Wallet'), ('bank_account', 'Bank Account'), ('card', 'Card'), ('external', 'External')], max_length=20, verbose_name='Source Type')),
                ('destination_type', models.CharField(choices=[('wallet', 'Wallet'), ('bank_account', 'Bank Account'), ('card', 'Card'), ('external', 'External')], max_length=20, verbose_name='Destination Type')),
                ('source_id', models.CharField(max_length=100, verbose_name='Source ID')),
                ('destination_id', models.CharField(max_length=100, verbose_name='Destination ID')),
                ('transaction_purpose', models.CharField(choices=[('deposit', 'Deposit'), ('withdrawal', 'Withdrawal'), ('transfer', 'Transfer'), ('payment', 'Payment'), ('refund', 'Refund')], max_length=20, verbose_name='Transaction Purpose')),
                ('is_internal', models.BooleanField(default=False, verbose_name='Is Internal')),
            ],
            options={
                'verbose_name': 'Wallet Transaction',
                'verbose_name_plural': 'Wallet Transactions',
            },
            bases=('transactions.transaction',),
        ),
        migrations.AddIndex(
            model_name='transaction',
            index=models.Index(fields=['transaction_id'], name='transaction_transac_fee96f_idx'),
        ),
        migrations.AddIndex(
            model_name='transaction',
            index=models.Index(fields=['user_id'], name='transaction_user_id_b60ed6_idx'),
        ),
        migrations.AddIndex(
            model_name='transaction',
            index=models.Index(fields=['merchant_id'], name='transaction_merchan_bd7cce_idx'),
        ),
        migrations.AddIndex(
            model_name='transaction',
            index=models.Index(fields=['transaction_type'], name='transaction_transac_09d7ec_idx'),
        ),
        migrations.AddIndex(
            model_name='transaction',
            index=models.Index(fields=['channel'], name='transaction_channel_a10069_idx'),
        ),
        migrations.AddIndex(
            model_name='transaction',
            index=models.Index(fields=['status'], name='transaction_status_71abbb_idx'),
        ),
        migrations.AddIndex(
            model_name='transaction',
            index=models.Index(fields=['timestamp'], name='transaction_timesta_20dac7_idx'),
        ),
        migrations.AddIndex(
            model_name='transaction',
            index=models.Index(fields=['is_flagged'], name='transaction_is_flag_4e8c10_idx'),
        ),
    ]
